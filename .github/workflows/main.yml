# 工作流的名称
name: Build Android APK

# 触发工作流的事件：当有代码推送到 main 或 master 分支时自动执行
on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

# 任务定义
jobs:
  build:
    # 运行任务的虚拟机环境
    runs-on: ubuntu-latest

    steps:
      # 第一步：检出（下载）你的仓库代码
      - name: Checkout repository
        uses: actions/checkout@v3

      # 第二步：设置Java环境（Android编译需要）
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'gradle'

      # 第三步：给Gradlew文件添加可执行权限
      # 这是在Linux/macOS环境下运行Gradle所必需的
      - name: Grant execute permission to gradlew
        run: chmod +x gradlew

      # 第四步：执行Gradle编译命令 (生成Debug版本的APK)
      # 这是整个流程的核心，它会编译你的App
      - name: Build with Gradle
        run: ./gradlew assembleDebug

      # 第五步：上传编译好的APK文件
      # 编译成功后，将app/build/outputs/apk/debug/目录下的APK文件上传
      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: app-debug.apk # 上传后的文件名
          path: app/build/outputs/apk/debug/app-debug.apk # APK文件在虚拟机中的路径
